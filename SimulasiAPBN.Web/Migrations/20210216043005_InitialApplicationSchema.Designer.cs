// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimulasiAPBN.Infrastructure.EntityFrameworkCore;

namespace SimulasiAPBN.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210216043005_InitialApplicationSchema")]
    partial class InitialApplicationSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimulasiAPBN.Core.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.Allocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("MandatoryExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MandatoryThreshold")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.BudgetTarget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.ToTable("BudgetTargets");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.MediaFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("MediaFiles");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SignInAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("SignInAttempts");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SignInSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<Guid>("SignInAttemptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SignInAttemptId");

                    b.ToTable("SignInSessions");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SimulationConfigs");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EngineKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SimulationState")
                        .HasColumnType("int");

                    b.Property<Guid>("StateBudgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("StateBudgetId");

                    b.ToTable("SimulationSessions");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationShare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClickedTimes")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("SimulationSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SimulationSessionId");

                    b.ToTable("SimulationShares");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationSpecialPolicyAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("SimulationSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialPolicyAllocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAllocation")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SimulationSessionId");

                    b.HasIndex("SpecialPolicyAllocationId");

                    b.ToTable("SimulationSpecialPolicyAllocations");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationStateExpenditure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsPriority")
                        .HasColumnType("bit");

                    b.Property<Guid>("SimulationSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StateExpenditureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAllocation")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SimulationSessionId");

                    b.HasIndex("StateExpenditureId");

                    b.ToTable("SimulationStateExpenditures");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SpecialPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StateBudgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAllocation")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("StateBudgetId");

                    b.ToTable("SpecialPolicies");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SpecialPolicyAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("SimulationMaximumMultiplier")
                        .HasColumnType("decimal(6,2)");

                    b.Property<Guid>("SpecialPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAllocation")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AllocationId");

                    b.HasIndex("SpecialPolicyId");

                    b.ToTable("SpecialPolicyAllocations");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateBudget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CountryIncome")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Revision")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StateBudgets");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateExpenditure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("SimulationMaximumMultiplier")
                        .HasColumnType("decimal(6,2)");

                    b.Property<Guid>("StateBudgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAllocation")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("StateBudgetId");

                    b.ToTable("StateExpenditures");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateExpenditureAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<Guid>("StateExpenditureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAllocation")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AllocationId");

                    b.HasIndex("StateExpenditureId");

                    b.ToTable("StateExpenditureAllocations");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.WebContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebContents");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.BudgetTarget", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.Budget", "Budget")
                        .WithMany("BudgetTargets")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SignInAttempt", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SignInSession", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.SignInAttempt", "SignInAttempt")
                        .WithMany()
                        .HasForeignKey("SignInAttemptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SignInAttempt");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationSession", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.StateBudget", "StateBudget")
                        .WithMany()
                        .HasForeignKey("StateBudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateBudget");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationShare", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.SimulationSession", "SimulationSession")
                        .WithMany("SimulationShares")
                        .HasForeignKey("SimulationSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SimulationSession");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationSpecialPolicyAllocation", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.SimulationSession", "SimulationSession")
                        .WithMany("SimulationSpecialPolicyAllocations")
                        .HasForeignKey("SimulationSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimulasiAPBN.Core.Models.SpecialPolicyAllocation", "SpecialPolicyAllocation")
                        .WithMany("SimulationSpecialPolicyAllocations")
                        .HasForeignKey("SpecialPolicyAllocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SimulationSession");

                    b.Navigation("SpecialPolicyAllocation");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationStateExpenditure", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.SimulationSession", "SimulationSession")
                        .WithMany("SimulationStateExpenditures")
                        .HasForeignKey("SimulationSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimulasiAPBN.Core.Models.StateExpenditure", "StateExpenditure")
                        .WithMany("SimulationStateExpenditures")
                        .HasForeignKey("StateExpenditureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SimulationSession");

                    b.Navigation("StateExpenditure");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SpecialPolicy", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.StateBudget", "StateBudget")
                        .WithMany("SpecialPolicies")
                        .HasForeignKey("StateBudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateBudget");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SpecialPolicyAllocation", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.Allocation", "Allocation")
                        .WithMany()
                        .HasForeignKey("AllocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimulasiAPBN.Core.Models.SpecialPolicy", "SpecialPolicy")
                        .WithMany("SpecialPolicyAllocations")
                        .HasForeignKey("SpecialPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allocation");

                    b.Navigation("SpecialPolicy");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateExpenditure", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.Budget", "Budget")
                        .WithMany()
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimulasiAPBN.Core.Models.StateBudget", "StateBudget")
                        .WithMany("StateExpenditures")
                        .HasForeignKey("StateBudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("StateBudget");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateExpenditureAllocation", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.Allocation", "Allocation")
                        .WithMany()
                        .HasForeignKey("AllocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimulasiAPBN.Core.Models.StateExpenditure", "StateExpenditure")
                        .WithMany("StateExpenditureAllocations")
                        .HasForeignKey("StateExpenditureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allocation");

                    b.Navigation("StateExpenditure");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.Token", b =>
                {
                    b.HasOne("SimulasiAPBN.Core.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.Budget", b =>
                {
                    b.Navigation("BudgetTargets");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SimulationSession", b =>
                {
                    b.Navigation("SimulationShares");

                    b.Navigation("SimulationSpecialPolicyAllocations");

                    b.Navigation("SimulationStateExpenditures");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SpecialPolicy", b =>
                {
                    b.Navigation("SpecialPolicyAllocations");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.SpecialPolicyAllocation", b =>
                {
                    b.Navigation("SimulationSpecialPolicyAllocations");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateBudget", b =>
                {
                    b.Navigation("SpecialPolicies");

                    b.Navigation("StateExpenditures");
                });

            modelBuilder.Entity("SimulasiAPBN.Core.Models.StateExpenditure", b =>
                {
                    b.Navigation("SimulationStateExpenditures");

                    b.Navigation("StateExpenditureAllocations");
                });
#pragma warning restore 612, 618
        }
    }
}
