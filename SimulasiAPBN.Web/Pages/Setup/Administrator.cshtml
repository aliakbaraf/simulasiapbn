@*
    Simulasi APBN

    Program ditulis oleh Danang Galuh Tegar Prasetyo (https://danang.id/)
    untuk Kementerian Keuangan Republik Indonesia.
*@
@page
@model Administrator

@{
    ViewBag.Step = 2;
    ViewBag.Title = "Konfigurasi Akun Pengelola";
    Layout = "_WizardLayout";
}

<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Konfigurasi Akun Pengelola</h1>
</div>

<partial name="_AlertPartial" />

<!-- Content Row -->
<div class="row">
    <div class="col-12">
        <p>
            Di laman ini Anda dapat melakukan konfigurasi akun pengelola (<i>administrator account</i>)
            untuk Dasbor Simulasi APBN.
        </p>
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Data Akun Pengelola</h6>
            </div>
            <div class="card-body">
                <form id="account-form" method="post">
                    <div class="form-group row">
                        <label for="name" class="col-md-3 col-form-label font-weight-bold">Nama Lengkap</label>
                        <div class="col-md-9">
                            <input type="text"
                                   class="form-control"
                                   id="name"
                                   placeholder="Andi Wijaya"
                                   v-model="name" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="email" class="col-md-3 col-form-label font-weight-bold">Alamat Email</label>
                        <div class="col-md-9">
                            <input type="text"
                                   class="form-control"
                                   id="email"
                                   placeholder="seseorang@kemenkeu.go.id"
                                   v-model="email" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="username" class="col-md-3 col-form-label font-weight-bold">Nama Pengguna</label>
                        <div class="col-md-9">
                            <input type="text"
                                   class="form-control"
                                   id="username"
                                   placeholder="(digunakan untuk masuk Dasbor)"
                                   v-model="username" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="password" class="col-md-3 col-form-label font-weight-bold">Kata Sandi</label>
                        <div class="col-md-9">
                            <input type="text"
                                   class="form-control"
                                   id="password"
                                   placeholder="(digunakan untuk masuk Dasbor)"
                                   v-model="password" />
                        </div>
                    </div>
                </form>
                <ul>
                    <li>
                        <code>Nama Pengguna</code> dan <code>Kata Sandi</code> akan digunakan untuk
                        masuk Dasbor Simulasi APBN.
                    </li>
                    <li>
                        <code>Nama Pengguna</code> hanya boleh terdiri dari huruf alfabet (<mark>a-z</mark>,
                        baik kapital maupun non-kapital), angka (<mark>0-1</mark>), garis bawah (<mark>_</mark>),
                        garis tengah (<mark>-</mark>), dan titik (<mark>.</mark>).
                    </li>
                    <li>
                        <code>Kata Sandi</code> minimum terdiri dari 8 karakter dengan harus mengandung
                        huruf kapital, huruf non-kapital dan angka.
                    </li>
                    <li>
                        <code>Nama Lengkap</code>, <code>Alamat Email</code>, <code>Nama Pengguna</code>,
                        dan <code>Kata Sandi</code> apabila diperlukan dapat diubah di kemudian hari
                        melalui panel Akun pada Dasbor Simulasi APBN.
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section CallToActions
{
    <button class="btn btn-warning" v-on:click="onBackButtonClicked">
        <i class="fas fa-fw fa-less-than"></i>&nbsp;Kembali
    </button>
    &nbsp;
    <button class="btn btn-primary" v-on:click="onNextButtonClicked">
        Lanjut&nbsp;<i class="fas fa-fw fa-greater-than"></i>
    </button>
}

@section Scripts
{
    <script src="~/vendor/localforage/localforage.min.js"></script>
    <script lang="js">
        var emailRegex = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
        var app = {
            data: {
                alerts: [],
                sweetAlert: {
                    text: "",
                    title: "Terjadi Kesalahan!",
                    icon: "error",
                    button: "OK"
                },
                name: "",
                email: "",
                username: "",
                password: "",
            },
            methods: {
                onAlertClose(index) {
                    this.alerts.splice(index, 1);
                },
                loadLocal(callback) {
                    if (callback === void 0) {
                        callback = function (err) { }
                    }
                    if (window.localforage !== void 0) {
                        window.localforage.getItem("name").then((name) => {
                            if (name !== null) {
                                this.name = name;
                            }
                            return window.localforage.getItem("email");
                        }).then((email) => {
                            if (email !== null) {
                                this.email = email;
                            }
                            return window.localforage.getItem("username");
                        }).then((username) => {
                            if (username !== null) {
                                this.username = username;
                            }
                        }).then(() => callback())
                            .catch(callback);
                    } else {
                        callback();
                    }
                },
                saveLocal(callback) {
                    if (callback === void 0) {
                        callback = function (err) { }
                    }
                    if (window.localforage !== void 0) {
                        window.localforage.setItem("name", this.name)
                            .then(window.localforage.setItem("email", this.email))
                            .then(window.localforage.setItem("username", this.username))
                            .then(window.localforage.setItem("password", this.password))
                            .then(() => {
                                this.name = this.name.trim();
                                this.email = this.email.trim();
                                this.username = this.username.trim();
                                callback()
                            })
                            .catch(callback);
                    } else {
                        callback();
                    }
                },
                onBackButtonClicked(event) {
                    event.preventDefault();
                    this.saveLocal((err) => {
                        if (err) {
                            this.showAlert(err);
                            return;
                        }
                        window.location.href = "/setup";
                    });
                },
                onNextButtonClicked(event) {
                    event.preventDefault();
                    this.saveLocal((err) => {
                        if (err) {
                            this.alertText = err;
                            return;
                        }
                        /* Name Testing */
                        if (!/^.{1,}$/.test(this.name)) {
                            this.showAlert("Silakan masukan Nama Lengkap Anda.");
                            return;
                        }
                        /* Email Testing */
                        if (!/^.{1,}$/.test(this.email)) {
                            this.showAlert("Silakan masukan Alamat Email Anda.");
                            return;
                        }
                        if (!emailRegex.test(this.email)) {
                            this.showAlert("Alamat Email tidak valid.");
                            return;
                        }
                        /* Username Testing */
                        if (!/^.{1,}$/.test(this.username)) {
                            this.showAlert("Silakan masukan Nama Pengguna pilihan Anda");
                            return;
                        }
                        if (!/^[a-zA-Z0-9_\-.]+$/.test(this.username)) {
                            this.showAlert("Nama Pengguna mengandung karakter terlarang.");
                            return;
                        }
                        /* Password Testing */
                        if (!/^.{8,}$/.test(this.password)) {
                            this.showAlert("Kata Sandi minimum terdiri dari 8 karakter.");
                            return;
                        }
                        if (!/[A-Z]/.test(this.password)) {
                            this.showAlert("Kata Sandi wajib mengandung huruf kapital (A-Z).");
                            return;
                        }
                        if (!/[a-z]/.test(this.password)) {
                            this.showAlert("Kata Sandi wajib mengandung huruf non-kapital (a-z).");
                            return;
                        }
                        if (!/[0-9]/.test(this.password)) {
                            this.showAlert("Kata Sandi wajib mengandung angka (0-9).");
                            return;
                        }
                        window.location.href = "/setup/summary";
                    });
                },
                showAlert(text) {
                    this.sweetAlert.text = text
                    showSweetAlert(this.sweetAlert);
                    this.alerts.push({ text, title: "Terjadi Kesalahan", type: "danger" });
                },
            },
            mounted() {
                var inputs = document.getElementsByTagName("input");
                for (var input of inputs) {
                    input.addEventListener("keyup", (event) => {
                        if (event.keyCode === 13) {
                            this.onNextButtonClicked(event);
                        }
                    });
                }
                this.showAlert(this.sweetAlert.text);
                this.loadLocal((err) => {
                    if (err) {
                        this.showAlert(err);
                    }
                });
            }
        };
        app.el = "#wrapper";
        app = new Vue(app);
    </script>
}
